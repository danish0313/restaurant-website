{"version":3,"sources":["logo.png","background.jpg","serviceWorker.js","components/search.js","components/menu.js","components/oval.js","components/body.js","App.js","components/recipes.js","components/router.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","Search","react_default","a","createElement","Container","fluid","className","Row","Col","md","Form","onSubmit","this","props","Recipe","type","placeholder","name","Component","Menu","Navbar","bg","variant","Link","to","Brand","src","logo","alt","Nav","Oval","react_loader_spinner_default","color","height","width","React","Body","map","values","xs","xl","sm","key","recipe_id","Image","image_url","rounded","title","substring","publisher","pathname","concat","state","recipe","Button","size","App","data","_callee","e","API_CALL","result","regenerator_default","wrap","_context","prev","next","preventDefault","target","elements","recipename","value","fetch","sent","json","_this","setState","recipes","console","log","stop","Fragment","menu","search","length","style","marginTop","oval_Oval","fontFamily","body","Recipes","details","componentDidMount","href","publisher_url","Router","BrowserRouter","Switch","Route","exact","path","component","ReactDOM","render","router","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f527cb58.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3a0149d9.png\";","module.exports = __webpack_public_path__ + \"static/media/background.95db12eb.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\r\n\r\nimport { Col ,Row ,Container , Form ,} from \"react-bootstrap\";\r\n\r\nimport background from '../background.jpg';\r\n\r\nclass Search extends Component {\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\trender()  {\r\n\r\n\r\n\r\nreturn(\r\n\r\n<Container fluid={true} className=\"body-box\">\r\n\r\n  <Row> \r\n\r\n\r\n  <Col md={12} className=\"back\"> \r\n\r\n\r\n\r\n<Col md ={4} className=\"search\">\r\n\r\n\r\n<Form onSubmit={this.props.Recipe}  >\r\n\r\n\r\n    <label>Enter Recipe Name!</label>\r\n    <br/>\r\n    <input className=\"remove\" type=\"text\" placeholder=\"Enter Recipe....\" name =\"recipename\" />\r\n\r\n<button className=\"btn\"> Search!</button>\r\n\r\n</Form>\r\n\r\n</Col>\r\n\r\n\r\n\r\n  </Col>\r\n  </Row>\r\n\r\n\r\n</Container>\r\n\r\n\r\n\r\n\r\n\r\n\t)\r\n\r\n\r\n\t}\r\n}\r\n\r\nexport default Search;\r\n\r\n\r\n\r\n","\r\nimport React , {Component} from 'react';\r\nimport {Navbar, Nav } from \"react-bootstrap\";\r\nimport logo from '../logo.png';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\n\r\nconst Menu = () => {\r\n\r\n\r\nreturn (\r\n\r\n\r\n\r\n    <header>\r\n <Navbar className=\"nav\" bg=\"dark\" variant=\"dark\">\r\n\r\n <Link to=\"/\">\r\n    <Navbar.Brand><img src={logo}  alt=\"logo\" className=\"logo\" /> <span className=\"logo-name\"> Recipes.....</span></Navbar.Brand>\r\n</Link>\r\n\r\n     <Nav className=\"mr-auto\">\r\n<h2>   Recipe Search!  </h2>\r\n\r\n \r\n    </Nav>\r\n   \r\n    \r\n  </Navbar>\r\n\r\n</header>\r\n\r\n\r\n\t);\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default  Menu;\r\n\r\n\r\n\r\n\r\n"," \r\nimport React, {Component} from 'react';\r\n import Loader from 'react-loader-spinner'\r\n export default class Oval extends React.Component {\r\n  //other logic\r\n    render() {\r\n     return(\r\n    <Loader type=\"Oval\" color=\"#1C1C1C\" height={80} width={80} />\r\n     );\r\n    }\r\n }","import React , {Component} from 'react';\r\n\r\nimport {Container , Row , Col , Image , Button} from 'react-bootstrap';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\n\r\nclass Body extends Component {\r\n\r\n\r\nrender(){\r\n\r\n\r\n\r\nreturn (\r\n\r\n<Container fluid={true}>\r\n<Row className=\"space-top\">\r\n\r\n\r\n\r\n{this.props.Recipe.map( values =>  \r\n\r\n\r\n<Col md={6} xs={12} xl={4} sm={12} className=\"cols\" key={values.recipe_id} >\r\n\r\n<Col md={12} className=\"inner-box\">\r\n\r\n  <div className=\"img-box\"> <Image className=\"img-body\" src={values.image_url} rounded />\r\n\r\n  </div>\r\n\r\n <h5>  {values.title.substring(0, 25)}</h5>\r\n\r\n <h6> <b>publisher:  {values.publisher} </b></h6>\r\n\r\n       <Link to ={{ pathname : `/recipes/${values.recipe_id}`,\r\n                    state     : { recipe : values.title     }\r\n\r\n\r\n   }}  className=\"link\">   <Button variant=\"primary\" size=\"sm\" className=\"recipe-btn\">    VIEW RECIPE  </Button>  </Link>\r\n \r\n</Col>\r\n\r\n</Col>\r\n\r\n)}\r\n\r\n\r\n</Row> \r\n\r\n</Container>\r\n\r\n\r\n)\r\n\r\n\r\n}\r\n\r\n}\r\n\r\n\r\nexport default Body;\r\n","import React, { Component} from 'react';\n\nimport './App.css';\n\nimport Search from './components/search.js';\n\nimport Menu from './components/menu.js';\n\nimport Oval from './components/oval.js';\n\nimport Body from \"./components/body.js\";\n\n \nclass App extends Component {\n\n\n state = {\n\ndata : []\n\n\n  };\n\n\n\n\nRecipe = async(e) => {\n\n const API_KEY = '8c009e936441b08ba9484ac72953b872';\n\n\ne.preventDefault();\n\nconst name = e.target.elements.recipename.value;\n\nconst API_CALL = await fetch(`https://www.food2fork.com/api/search?key=${API_KEY}&q=${name}&count=6`) ;\n\n\nconst result = await API_CALL.json();\n\n\nthis.setState({\n\ndata : result.recipes\n\n\n});\n\nconsole.log(this.state.data)\n}\n\n\n\n\n  render() {\n\n\n\n\n    return (\n\n<React.Fragment>\n\n\n<Menu/>\n\n <Search  Recipe={this.Recipe} />\n\n\n\n   {this.state.data.length === 0 ? <center style={{marginTop:50}}><Oval/> <br/>\n    <h3 style={{ fontFamily: 'oxygen' , color: '#1C1C1C'}}>PLEASE ENTER YOUR RECIPE NAME! </h3></center> : <Body Recipe={this.state.data}  /> }\n\n</React.Fragment>\n\n    )\n  }\n}\n\nexport default App;","import React , {Component} from 'react';\r\n\r\nimport Menu from './menu.js';\r\n\r\n\r\nimport {Container, Row , Col , Image , Button} from 'react-bootstrap';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Recipes extends Component {\r\n\r\nstate ={\r\n\r\ndetails : []\r\n\r\n};\r\n\r\n\r\n\r\ncomponentDidMount = async () => {\r\n\r\nconst API_KEY = '8c009e936441b08ba9484ac72953b872';\r\n\r\n\r\nconst title = this.props.location.state.recipe;\r\n\r\nconst API_CALL = await fetch(`https://www.food2fork.com/api/search?key=${API_KEY}&q=${title}`) ;\r\n\r\n\r\nconst data = await API_CALL.json();\r\n\r\n\r\nthis.setState({\r\n\r\ndetails : data.recipes[0]\r\n\r\n\r\n\r\n})\r\n\r\nconsole.log(this.state.details);\r\n\r\n}\r\n\r\n\r\n\t\r\nrender() {\r\n\r\n\r\nreturn (\r\n\r\n\r\n\t<div>\r\n<Menu/>\r\n\r\n\r\n\r\n\r\n<Container>\r\n\r\n<Row>\r\n<Col md={12}> <h1 className=\"details\"> Recipes details..... </h1> </Col>\r\n\r\n</Row>\r\n\r\n<Row style={{'marginTop': '40px'}}>\r\n\r\n<Col md={6} className=\"box-1\"> \r\n\r\n <Link to=\"/\">   <Button variant=\"primary\" size=\"sm\" className=\"recipe-btn\">    GO BACK!  </Button> </Link> \r\n\r\n  <Image className=\"details-img\" src={this.state.details.image_url} alt={this.state.details.title} />     </Col>\r\n\r\n<Col md={6} className=\"box-2\"> \r\n\r\n<div className=\"box-2-title\"> Tittle of Recipe: <br/>\r\n\r\n {this.state.details.title} \r\n\r\n\r\n <hr/>\r\n\r\n  </div>\r\n\r\n\r\n\r\n<div className=\"box-2-publisher\"> Publisher: <br/>\r\n\r\n {this.state.details.publisher} \r\n\r\n\r\n <hr/>\r\n\r\n  </div>\r\n\r\n\r\n\r\n\r\n<div className=\"box-2-url\"> Website: <br/>\r\n\r\n <a href=\"http://thepioneerwoman.com\">{this.state.details.publisher_url} \r\n</a>\r\n\r\n <hr/>\r\n\r\n  </div>\r\n\r\n\r\n\r\n  </Col>\r\n\r\n\r\n</Row>\r\n\r\n\r\n\r\n</Container>\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n);\r\n\r\n\r\n}\r\n\r\n}\r\n\r\n\r\nexport default  Recipes;","import React , {Component} from 'react';\r\n\r\nimport {Route , Switch , BrowserRouter}  from 'react-router-dom';\r\n\r\nimport Recipes from './recipes.js';\r\nimport App from '../App.js';\r\n\r\n\r\nclass Router extends Component {\r\n\r\nrender() {\r\n\r\nreturn (\r\n\r\n<BrowserRouter>\r\n<Switch>\r\n\r\n<Route exact path=\"/\" component={App}/>\r\n<Route path=\"/recipes/:id\" component={Recipes}/>\r\n\r\n</Switch>\r\n\r\n</BrowserRouter>\r\n\r\n\t)\r\n\r\n\r\n}\r\n\r\n\r\n\r\n}\r\n\t\r\n\r\nexport default Router;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App.js';\nimport Router from './components/router.js'\n\nReactDOM.render(<Router/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}